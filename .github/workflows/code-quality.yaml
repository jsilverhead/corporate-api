name: Code quality

on: pull_request

env:
  php-version: "8.3"
  php-extensions: pdo_pgsql, igbinary, uuid, redis, uopz, intl, opcache

jobs:
  php-cs-fixer:
    name: PHP-CS-Fixer
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare cache for PHP extensions
        id: php-extensions-cache
        uses: shivammathur/cache-extensions@1.13.0
        with:
          php-version: ${{ env.php-version }}
          extensions: ${{ env.php-extensions }}
          key: php-extensions

      - name: Cache PHP extensions
        uses: actions/cache@v4
        with:
          path: ${{ steps.php-extensions-cache.outputs.dir }}
          key: ${{ steps.php-extensions-cache.outputs.key }}
          restore-keys: ${{ steps.php-extensions-cache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@2.24.0
        with:
          php-version: ${{ env.php-version }}
          extensions: ${{ env.php-extensions }}
          tools: composer

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install
        working-directory: ./app/

      - name: Lint with PHP-CS-Fixer
        run: vendor/bin/php-cs-fixer fix --allow-risky=yes --dry-run --verbose
        working-directory: ./app/

  psalm:
    name: Psalm
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare cache for PHP extensions
        id: php-extensions-cache
        uses: shivammathur/cache-extensions@1.13.0
        with:
          php-version: ${{ env.php-version }}
          extensions: ${{ env.php-extensions }}
          key: php-extensions

      - name: Cache PHP extensions
        uses: actions/cache@v4
        with:
          path: ${{ steps.php-extensions-cache.outputs.dir }}
          key: ${{ steps.php-extensions-cache.outputs.key }}
          restore-keys: ${{ steps.php-extensions-cache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@2.24.0
        with:
          php-version: ${{ env.php-version }}
          extensions: ${{ env.php-extensions }}
          tools: composer

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install
        working-directory: ./app/

      - name: Warmup Symfony container
        run: bin/console cache:warmup --no-interaction --env=test
        working-directory: ./app/

      - name: Analyze with Psalm
        run: vendor/bin/psalm --output-format=github
        working-directory: ./app/

  prettier:
    name: Prettier
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ./app/.nvmrc

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install npm dependencies
        run: npm ci --prefer-offline
        working-directory: ./app/

      - name: Lint with Prettier
        run: npx prettier --check .
        working-directory: ./app/
